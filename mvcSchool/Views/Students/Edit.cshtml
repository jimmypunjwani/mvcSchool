@model mvcSchool.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>

    //JQuery Block: function for calling partial View:
    $(function () {

        //Adding function to reload:
        function LoadEnrollments(sid) {
            //Ajax Call:
            $.ajax({
                //Putting actions:
                //Html Action function for url:
                url: "@Url.Action("_studentPartial", "Students")",
                //Our data type is html because we are loding html data from the contoller function:
                dataType: "html",
                //used as a good practice to return correct character set for html:
                contentType: "application/html; charset-utf-8",
                //Adding Type is get as we are getting data:
                type: "GET",
                //Passing data as our action in the controller is expecting some data in our case CourseID.
                data: {
                    //This is the name of the parm passed in the contoller function and cid is our local variable:
                    studid: sid
                },
                //defining success event:
                //When a success call is made contoller function expects some sort of data in return in for of list:
                success: function (data) {
                    $("#data").fadeOut().html(data).fadeIn();
                }
            });
        }


        //This gets the value of CourseID which is currently selected and stored in a variable:
        var sid = $("#StudentID").val();
        LoadEnrollments(sid);

        //This trigger change in CourseID:
        $("#StudentID").change(function () {
            var cid = $("#StudentID").val();
            LoadEnrollments(cid);
            $("#failed").fadeOut("fast");
            $("#success").fadeOut("fast");
            $("#failure").fadeOut("fast");
            //$("#Student_FirstName").val("");
        });
    });



    //Javascript Function: for "Added" On Success:
    function Added(res) {
        if (res.IsSuccess) {
            $(function () {
                $("#failed").fadeOut("fast");
                $("#failure").fadeOut("fast");
                $("#success").fadeIn("fast");
                //reload the data grid:
                var sid = $("#StudentID").val();
                //Ajax Call: Repeating the same function:
                $.ajax({
                    //Putting actions:
                    //Html Action function for url:
                    url: "@Url.Action("_studentPartial", "Students")",
                    //Our data type is html because we are loding html data from the contoller function:
                    dataType: "html",
                    //used as a good practice to return correct character set for html:
                    contentType: "application/html; charset-utf-8",
                    //Adding Type is get as we are getting data:
                    type: "GET",
                    //Passing data as our action in the controller is expecting some data in our case CourseID.
                    data: {
                        //This is the name of the parm passed in the contoller function and cid is our local variable:
                        studid: sid
                    },
                    //defining success event:
                    //When a success call is made contoller function expects some sort of data in return in for of list:
                    success: function (data) {
                        $("#data").fadeOut().html(data).fadeIn();
                    }
                });
                //$("#success").append(res.Message);
                //$("#Student_FirstName").val("");
            })
        }
        else {
            Failed(res);
        }
    }

    //Javascript Function: for "Failed" On Not Success:
    function Failed(res) {
        $(function () {
            $("#failed").fadeIn("fast");
            $("#success").fadeOut("fast");
            $("#failure").fadeOut("fast");
        })
    }

    //Javascript Function: for "Failar" On Not Success:
    function Failure(res) {
        $(function () {
            $("#failure").fadeIn("fast");
            $("#success").fadeOut("fast");
            $("#failed").fadeOut("fast");
        })
    }

</script>


<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnrollmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnrollmentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hobby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hobby, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hobby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<!--Adding Partial View for Enrollment Grid:-->
<hr />

<div id="data">
    @*@Html.Action("_studentPartial", "Students")*@
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
