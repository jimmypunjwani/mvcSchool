@model mvcSchool.Models.Enrollment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>

    //JQuery Block: function for calling partial View:
    $(function () {

        //Adding function to reload:
        function LoadEnrollments(cid) {
            //Ajax Call:
            $.ajax({
                //Putting actions:
                //Html Action function for url:
                url: "@Url.Action("_enrollmentPartial", "Enrollments")",
                //Our data type is html because we are loding html data from the contoller function:
                dataType: "html",
                //used as a good practice to return correct character set for html:
                contentType: "application/html; charset-utf-8",
                //Adding Type is get as we are getting data:
                type: "GET",
                //Passing data as our action in the controller is expecting some data in our case CourseID.
                data: {
                    //This is the name of the parm passed in the contoller function and cid is our local variable:
                    courseid: cid
                },
                //defining success event:
                //When a success call is made contoller function expects some sort of data in return in for of list:
                success: function (data) {
                    $("#data").fadeOut().html(data).fadeIn();
                }
            });
        }


        //This gets the value of CourseID which is currently selected and stored in a variable:
        var cid = $("#CourseID").val();
        LoadEnrollments(cid);

        //This trigger change in CourseID:
        $("#CourseID").change(function () {
            var cid = $("#CourseID").val();
            LoadEnrollments(cid);
            $("#failed").fadeOut("fast");
            $("#success").fadeOut("fast");
            $("#failure").fadeOut("fast");
            $("#Student_FirstName").val("");
        });

        //This is for autocomplete Student Name function:
        $("#Student_FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Enrollments/GetStudents",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        $("#Student_FirstName").val("");
                        response($.map(data, function (item) {
                            return { label: item.FullName, value: item.FullName, id: item.Id };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, query) {
                console.log(query);
                $("#StudentID").val(query.item.id);
            }
        });
    });



    //Javascript Function: for "Added" On Success:
    function Added(res) {
        if (res.IsSuccess) {
            $(function () {
                $("#failed").fadeOut("fast");
                $("#failure").fadeOut("fast");
                $("#success").fadeIn("fast");
                //reload the data grid:
                var cid = $("#CourseID").val();
                //Ajax Call: Repeating the same function:
                $.ajax({
                    //Putting actions:
                    //Html Action function for url:
                    url: "@Url.Action("_enrollmentPartial", "Enrollments")",
                    //Our data type is html because we are loding html data from the contoller function:
                    dataType: "html",
                    //used as a good practice to return correct character set for html:
                    contentType: "application/html; charset-utf-8",
                    //Adding Type is get as we are getting data:
                    type: "GET",
                    //Passing data as our action in the controller is expecting some data in our case CourseID.
                    data: {
                        //This is the name of the parm passed in the contoller function and cid is our local variable:
                        courseid: cid
                    },
                    //defining success event:
                    //When a success call is made contoller function expects some sort of data in return in for of list:
                    success: function (data) {
                        $("#data").fadeOut().html(data).fadeIn();
                    }
                });
                //$("#success").append(res.Message);
                $("#Student_FirstName").val("");
            })
        }
        else {
            Failed(res);
        }
    }

    //Javascript Function: for "Failed" On Not Success:
    function Failed(res) {
        $(function () {
            $("#failed").fadeIn("fast");
            $("#success").fadeOut("fast");
            $("#failure").fadeOut("fast");
        })
    }

    //Javascript Function: for "Failar" On Not Success:
    function Failure(res) {
        $(function () {
            $("#failure").fadeIn("fast");
            $("#success").fadeOut("fast");
            $("#failed").fadeOut("fast");
        })
    }

</script>


<h2>Create</h2>

<!--Changing Form from HTML to AJAX:
Ajax.BeginForm("Action", "FromWhere", Object )
    new AjaxOptions {HttpMethod, OnSuccess, OnFailur}
-->
@using (Ajax.BeginForm("AddStudent", "Enrollments", new AjaxOptions { 
    HttpMethod = "POST",
    OnSuccess = "Added",
    OnFailure = "Failure"
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enrollment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <!--Adding div for "failed":-->
        <div id="failed" class="alert alert-danger" style="display: none;">
            Student Already Enrolled or Not Entered.
        </div>
        

        <!--Adding div for "success":-->
        <div id="success" class="alert alert-success" style="display: none;">
            Student Added Successfully.
        </div>

        <!--Adding div for "failure":-->
        <div id="failure" class="alert alert-danger" style="display: none;">
            Please Contact to your Administator.
        </div>
        

        @*<div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <!--Changing Lable:-->
            <label for="CourseID" class = "control-label col-md-2">Course</label>
            @*@Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <!--Changing Lable:-->
            <label for="StudentID" class="control-label col-md-2">Student Name</label>
            @*@Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.StudentID)
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.LecturerID, "LecturerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LecturerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LecturerID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enroll" class="btn btn-success btn-block" />
            </div>
        </div>
    </div>
}

<!--Adding Partial View for Enrollment Grid:-->
<hr/>

<div id="data">
    @*@Html.Action("_enrollmentPartial", "Enrollment")*@
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
